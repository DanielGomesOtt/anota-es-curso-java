{
	"nodes":[
		{"id":"8be7b2cbc7242603","type":"text","text":"A primeira classe a ser executada sempre será a classe \"main\".\n\nEnquanto os arquivos são classes java, as pastas são pacotes.\n\nO código fica todo dentro da pasta src.\n\n\n\n","x":-1300,"y":-820,"width":340,"height":220},
		{"id":"80ce53e11a2122eb","type":"text","text":"Introdução","x":-1255,"y":-920,"width":250,"height":60},
		{"id":"0b62e85deabd3642","type":"text","text":"Comentários","x":-800,"y":-920,"width":250,"height":60},
		{"id":"2dd073038e9704df","type":"text","text":"Comentário de uma linha:  //.\n\nComentário múltiplas linhas:  /*  */.\n\nComentário com JavaDoc:  /** */.\n\n\n\n\n","x":-842,"y":-820,"width":335,"height":220},
		{"id":"8264dfc083eb142b","type":"text","text":"Declaração de variável: tipo nome = valor;\nEx: int numero = 1;\n\nDeclaração de constante: final tipo NOME = valor;\nEx: final double VALOR = 2.00;\n\nDeclaração por inferência (somente dentro de métodos): var nome = valor;\nEx: var nome = \"Meu nome\";\n\n\n","x":-325,"y":-820,"width":425,"height":260},
		{"id":"cf4a550453d70378","type":"text","text":"Variáveis e constantes","x":-237,"y":-920,"width":250,"height":60},
		{"id":"66449d5d7ddd92b5","type":"text","text":"Tipos primitivos","x":-237,"y":-440,"width":250,"height":60},
		{"id":"fb9290fbdf2a8aad","type":"text","text":"byte.\nshort.\nint.\nlong.\ndouble.\nfloat.\nchar.\nboolean.\n\n-------------------------------\nÉ possível formatar números grandes usando \"__\", para melhor visualização.\nEx: 3000256  ->  3_000_256\n\nNúmeros Inteiros:\n\nint (padrão): Números inteiros sem sufixo são tratados como int. Exemplo: um número como 1000 será do tipo int.\nlong (sufixo L ou l): Use L para números inteiros grandes que excedem o limite de int. Exemplo: 10000000000L.\nNúmeros Decimais:\n\ndouble (padrão): Números com ponto decimal, como 3.14159, são tratados como double.\nfloat (sufixo F ou f): Use F para números decimais que devem ser do tipo float, que tem menos precisão. Exemplo: 19.99F.\nCaracteres e Strings:\n\nchar: Representado por aspas simples e usado para um único caractere, como 'A'.\nString: Representado por aspas duplas para texto, como \"Java\".\nBooleanos:\n\nApenas dois valores possíveis: true ou false.\nHexadecimais e Binários:\n\nHexadecimal: Usa o prefixo 0x ou 0X. Exemplo: 0xFF representa 255 em decimal.\nBinário: Usa o prefixo 0b ou 0B. Exemplo: 0b1010 representa 10 em decimal.\nOutros Literais:\n\nSeparador para legibilidade: Use _ para separar números grandes, como em 1_000_000.\nCaracteres especiais: Use \\ para escapar caracteres em strings, como \\n para uma nova linha ou \\\\ para uma barra invertida.\n\n","x":-487,"y":-320,"width":750,"height":980},
		{"id":"30740c12a0e584a1","type":"text","text":"importação","x":380,"y":-920,"width":250,"height":60},
		{"id":"6ad7becc31b935af","type":"text","text":"Só usar a palavra \"import\" no começo do programa.","x":380,"y":-820,"width":250,"height":110},
		{"id":"9c38db3b60214f7e","type":"text","text":"Escrever e ler valores pelo terminal","x":-1295,"y":-440,"width":335,"height":60},
		{"id":"fe4014258c587080","type":"text","text":"package fundamentos;  \n  \nimport java.util.Scanner;  \n  \npublic class LerValores {  \n  \n    public static void main(String[] args){  \n        System.out.println(\"Bom dia !!!\");  \n  \n        Scanner entrada = new Scanner(System.in);  \n  \n        System.out.print(\"Digite seu nome: \");  \n        String nome = entrada.nextLine();  \n  \n        System.out.print(\"Digite seu sobrenome: \");  \n        String sobrenome = entrada.nextLine();  \n  \n        System.out.print(\"Digite sua idade: \");  \n        int idade = entrada.nextInt();  \n  \n        System.out.printf(\"Nome: %s, Sobrenome: %s e Idade: %d \\n\", nome, sobrenome, idade);  \n  \n        entrada.close();  \n    }  \n}","x":-1568,"y":-320,"width":882,"height":700},
		{"id":"035256a45674f7e6","x":408,"y":380,"width":672,"height":500,"type":"text","text":"Os _wrappers_ em Java são classes que encapsulam tipos primitivos para que eles possam ser tratados como objetos. Aqui está uma explicação breve de cada um:\n\n- **Byte**: Encapsula o tipo primitivo `byte` (8 bits, de -128 a 127).\n- **Short**: Encapsula o tipo primitivo `short` (16 bits, de -32.768 a 32.767).\n- **Integer**: Encapsula o tipo primitivo `int` (32 bits, de -2.147.483.648 a 2.147.483.647).\n- **Long**: Encapsula o tipo primitivo `long` (64 bits, de -2^63 a 2^63-1).\n- **Float**: Encapsula o tipo primitivo `float` (32 bits, ponto flutuante, precisão simples).\n- **Double**: Encapsula o tipo primitivo `double` (64 bits, ponto flutuante, precisão dupla).\n- **Character**: Encapsula o tipo primitivo `char` (16 bits, um caractere Unicode).\n- **Boolean**: Encapsula o tipo primitivo `boolean` (true/false).\n\nEles são úteis em cenários que exigem objetos, como coleções (`List`, `Set`, etc.). A _autoboxing_ e _unboxing_ permitem conversão automática entre primitivos e _wrappers_."},
		{"id":"421bf7f5166047eb","x":619,"y":220,"width":250,"height":50,"type":"text","text":"Wrappers"},
		{"id":"8fd201fda2cb2dde","type":"text","text":"Exemplo de uso: String nome = \"Meu nome\";\n\nAtravés do String., temos acesso a várias funcionalidades como toUpperCase(), concat, etc.\n\nPodemos usar notação de ponto em String literais também.\nEx: System.out.prinln(\"Bom dia\".toUpperCase());","x":538,"y":-320,"width":412,"height":340},
		{"id":"559f7b8e4f6cb351","type":"text","text":"String","x":619,"y":-440,"width":250,"height":60},
		{"id":"cfc371b0f7cbdc54","x":-278,"y":820,"width":333,"height":60,"type":"text","text":"Conversões de tipos"},
		{"id":"556a7ebb9a05bcca","x":-467,"y":960,"width":711,"height":1040,"type":"text","text":"EXEMPLO DE CONVERSÃO DE VARIÁVEIS:\n\npublic class Cast {  \n  \n    public static void main(String[] args) {  \n        double doubleToInt = 1; // conversão implicita  \n        System.out.println(doubleToInt);  \n        int inteiro = 123;  \n        byte valorByte = (byte) inteiro;// conversão explicita  \n        System.out.println(valorByte);  \n  \n        //numero para string  \n        Integer num1 = 1000;  \n        System.out.println(num1.toString().length());  \n  \n        int num2 = 10000000;  \n        System.out.println(Integer.toString(num2).length());  \n    }  \n}\n\nEXEMPLO DE CONVERSÃO DE NÚMERO PARA STRING:\n\nimport javax.swing.*;  \n  \npublic class CastNumeroString {  \n  \n    public static void main(String[] args) {  \n        String valor1 = JOptionPane.showInputDialog(\"Insira o primeiro valor\");  \n        String valor2 = JOptionPane.showInputDialog(\"Insira o segundo valor\");  \n  \n        double numero1 = Double.parseDouble(valor1);  \n        double numero2 = Double.parseDouble(valor2);  \n        double soma = numero1 + numero2;  \n  \n        System.out.println(\"Concatenação: \" + valor1 + valor2);  \n        System.out.println(\"Soma: \" + soma);  \n    }  \n}"}
	],
	"edges":[
		{"id":"9b95da6358c1f48d","fromNode":"80ce53e11a2122eb","fromSide":"bottom","toNode":"8be7b2cbc7242603","toSide":"top"},
		{"id":"a352e797531ecb4d","fromNode":"0b62e85deabd3642","fromSide":"bottom","toNode":"2dd073038e9704df","toSide":"top"},
		{"id":"6f192b66087a31d5","fromNode":"cf4a550453d70378","fromSide":"bottom","toNode":"8264dfc083eb142b","toSide":"top"},
		{"id":"69347a4338e33c45","fromNode":"66449d5d7ddd92b5","fromSide":"bottom","toNode":"fb9290fbdf2a8aad","toSide":"top"},
		{"id":"94fd20a9f1dfa50e","fromNode":"8264dfc083eb142b","fromSide":"bottom","toNode":"66449d5d7ddd92b5","toSide":"top"},
		{"id":"9f64a701c82177d8","fromNode":"30740c12a0e584a1","fromSide":"bottom","toNode":"6ad7becc31b935af","toSide":"top"},
		{"id":"957c430902d64fe3","fromNode":"559f7b8e4f6cb351","fromSide":"bottom","toNode":"8fd201fda2cb2dde","toSide":"top"},
		{"id":"031c8af712e48faa","fromNode":"fb9290fbdf2a8aad","fromSide":"right","toNode":"8fd201fda2cb2dde","toSide":"left"},
		{"id":"0c8ff904ddd52cf5","fromNode":"9c38db3b60214f7e","fromSide":"bottom","toNode":"fe4014258c587080","toSide":"top"},
		{"id":"d76f53523f67b70b","fromNode":"421bf7f5166047eb","fromSide":"bottom","toNode":"035256a45674f7e6","toSide":"top"},
		{"id":"d3240c3b4a9af7b2","fromNode":"fb9290fbdf2a8aad","fromSide":"right","toNode":"035256a45674f7e6","toSide":"left"},
		{"id":"3c07d209b9299b24","fromNode":"cfc371b0f7cbdc54","fromSide":"bottom","toNode":"556a7ebb9a05bcca","toSide":"top"},
		{"id":"dadce2854a741f9a","fromNode":"fb9290fbdf2a8aad","fromSide":"bottom","toNode":"cfc371b0f7cbdc54","toSide":"top"}
	]
}